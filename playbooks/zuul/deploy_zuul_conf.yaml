# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
---
- name: provision zuul config
  hosts: zuul-web
  become: yes
  gather_facts: no
  tasks:

    # - name: redeploy our zuul tenant config
    #   become: yes
    #   copy:
    #     dest: "{{ zuul_file_main_yaml_dest }}"
    #     group: "{{ zuul_file_main_yaml_group }}"
    #     mode: "{{ zuul_file_main_yaml_mode }}"
    #     owner: "{{ zuul_file_main_yaml_owner }}"
    #     src: "zuul/main.yaml"
    #   register: zuul_file_main_yaml
    #
    # - name: redeploy our zuul config
    #   become: yes
    #   template:
    #     dest: "{{ zuul_file_zuul_conf_dest }}"
    #     group: "{{ zuul_file_zuul_conf_group }}"
    #     mode: "{{ zuul_file_zuul_conf_mode }}"
    #     owner: "{{ zuul_file_zuul_conf_owner }}"
    #     src: "zuul/zuul.conf"
    #   register: zuul_file_zuul_conf

    # If we do not deploy master config key,
    # we will not be able to decrypt secrets and zuul will not start
    # - name: gather config project key
    #   set_fact:
    #     zuul_config_project_key_dir: "{{ zuul_config_project_key_path | dirname }}"
    #
    # - name: Create required directories.
    #   file:
    #     group: "{{ zuul_user_group }}"
    #     owner: "{{ zuul_user_name }}"
    #     path: "{{ zuul_config_project_key_dir }}"
    #     state: directory
    #
    # - name: deploy our zuul config project key
    #   copy:
    #     dest: "{{ zuul_config_project_key_path }}"
    #     group: "{{ zuul_user_group  }}"
    #     mode: "0600"
    #     owner: "{{ zuul_user_name }}"
    #     content: "{{ zuul_config_project_key }}"
    #   register: zuul_file_zuul_config_project_key
    #
    # - name: deploy our github key
    #   copy:
    #     dest: "{{ zuul_file_github_pem_dest }}"
    #     group: "{{ zuul_file_github_pem_group }}"
    #     mode: "{{ zuul_file_github_pem_mode }}"
    #     owner: "{{ zuul_file_github_pem_owner }}"
    #     content: "{{ github_pem_key }}"
    #   register: zuul_github_pem_conf
    #
    # # - name: deploy our nodepool key
    # #   copy:
    # #     dest: "{{ zuul_file_ssh_pem_dest }}"
    # #     group: "{{ zuul_file_github_pem_group }}"
    # #     mode: "{{ zuul_file_github_pem_mode }}"
    # #     owner: "{{ zuul_file_github_pem_owner }}"
    # #     content: "{{ nodepool_ssh_key }}"
    # #   register: zuul_github_pem_conf
    #
    # - name: deploy static web
    #   synchronize:
    #     dest: "{{ zuul_static_dest }}"
    #     src: "{{ zuul_static_src }}"
    #   register: zuul_static
    #
    # - name: set attributes of static web files after sync
    #   file:
    #     dest: "{{ zuul_static_dest }}"
    #     recurse: yes
    #     group: "{{ zuul_static_group }}"
    #     mode: "{{ zuul_static_mode }}"
    #     owner: "{{ zuul_static_owner}}"
    #
    # - name: set attributes of static web after sync
    #   file:
    #     dest: "{{ zuul_static_dest }}"
    #     recurse: no
    #     mode: 0755
    #
    # - name: deploy vhosts
    #   copy:
    #     dest: "/etc/httpd/conf.d/vhost_zuul.conf"
    #     group: "{{ zuul_static_group }}"
    #     mode: 0664
    #     owner: "{{ zuul_static_owner }}"
    #     src: "{{ zuul_vhost_src }}"
    #   register: zuul_vhost_conf
    #
    # - name: Reload services
    #   become: yes
    #   service:
    #     name: "{{ item }}"
    #     state: reloaded
    #   with_items:
    #     - zuul-merger
    #     - zuul_scheduler
    #     - zuul_web
    #     - httpd

      - name: Set authorized key took from file
        authorized_key:
          user: zuul
          state: present
          key: "{{ logs_ssh_public_key }}"
