---
- job:
    name: base
    parent: null
    abstract: true
    description: |
      The base job for OTC installation of Zuul.

      All jobs ultimately inherit from this.  It runs a pre-playbook
      which copies all of the job's prepared git repos on to all of
      the nodes in the nodeset.  It runs a post-playbook which copies
      all of the files in the logs/ subdirectory of the executor
      work directory to the logserver.

      It also sets default timeout and nodeset values (which may be
      overidden).

      Responds to these variables:

      .. zuul:jobvar:: base_serial
         :default: Omitted

         This sets the serial keyword in the pre and post playbooks
         which can be an integer or percentage.

         See ansible documentation for more information:
         http://docs.ansible.com/ansible/latest/playbooks_delegation.html

    pre-run: playbooks/base/pre.yaml
    post-run:
      - playbooks/base/post.yaml
      - playbooks/base/post-logs.yaml
    cleanup-run: playbooks/base/cleanup.yaml
    roles:
      - zuul: zuul/zuul-jobs
      - zuul: opentelekomcloud-infra/otc-zuul-jobs
    timeout: 1800
    post-timeout: 1800
    nodeset: ubuntu-bionic
    #nodeset: debian-buster
    secrets:
      - otc_cloud_logs

- job:
    name: release-python
    description: |
      Release python tarballs / wheels to pypi.
    pre-run: playbooks/pti-python-tarball/pre.yaml
    run: playbooks/pti-python-tarball/run.yaml
    post-run:
      - playbooks/pti-python-tarball/post.yaml
      - playbooks/publish/pypi.yaml
    secrets:
      - secret: pypi_secret
        name: pypi_info
      - gpg_key
    vars:
      release_python: python3
      twine_python: python3

- job:
    name: test-release
    parent: base
    description: |
      Test building python tarballs / wheels and the packaging metadata.
    pre-run: playbooks/pti-python-tarball/pre.yaml
    run: playbooks/pti-python-tarball/check.yaml
    vars:
      release_python: python3
      twine_python: python3
    files:
      - setup.cfg
      - setup.py
      - README.rst

- job:
    name: release-ansible-collection
    parent: ansible-collection-release
    description: |
      Release ansible collection tarball to Galaxy.
    # pre-run: playbooks/pti-ansible-collection-tarball/pre.yaml
    # run: playbooks/pti-ansible-collection-tarball/run.yaml
    # post-run:
    #   - playbooks/publish/ansible-collection.yaml
    secrets:
      - secret: ansible_galaxy_api_key
        name: ansible_collection_publish_galaxy_info

- job:
    name: release-goreleaser
    description: |
      Release go binaries.
    pre-run: playbooks/pti-goreleaser/pre.yaml
    run: playbooks/pti-goreleaser/run.yaml
    secrets:
      - gpg_key
      - secret: github_key_public_repo
        name: goreleaser_github_token
    vars:
      go_version: "1.15"

- job:
    name: tox-functional
    parent: tox
    description: |
      Base job for executing functional tests with tox against OTC
    pre-run:
      - playbooks/otc/functest-pre.yaml
    post-run: playbooks/otc/functest-post.yaml
    vars:
      tox_envlist: functional
      tox_environment:
        OS_CLOUD: functest_cloud
        OS_ADMIN_CLOUD: functest_cloud
    secrets:
      - functest_cloud_config

- job:
    name: golang-make-functional
    description: |
      Base job for executing golang functional tests against OTC
    pre-run:
      - playbooks/otc/functest-pre.yaml
    post-run: playbooks/otc/functest-post.yaml
    parent: golang-make
    vars:
      make_command: acceptance
      make_env:
        OS_CLOUD: functest_cloud
    secrets:
      - functest_cloud_config

- job:
    name: otc-ansible-collection-test-integration
    parent: ansible-collection-test-integration
    description: |
      Execute ansible-test integration tests for the collection with provided cloud
    pre-run:
      - playbooks/otc/functest-pre.yaml
    post-run: playbooks/otc/functest-post.yaml
    vars:
      ansible_test_integration_env:
        OS_CLOUD: functest_cloud
    secrets:
      - functest_cloud_config

- job:
    name: otcinfra-upload-image
    parent: upload-docker-image
    secrets:
      name: docker_credentials
      secret: otcinfra_dockerhub
      pass-to-parent: true

- job:
    name: otcinfra-promote-image
    parent: promote-docker-image
    secrets:
      name: docker_credentials
      secret: otcinfra_dockerhub
      pass-to-parent: true
